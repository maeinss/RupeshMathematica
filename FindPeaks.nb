(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     29123,        660]
NotebookOptionsPosition[     27649,        626]
NotebookOutlinePosition[     28049,        642]
CellTagsIndexPosition[     28006,        639]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellLabel->"In[59]:=",ExpressionUUID->"f16d3080-3b0a-48d1-824a-f00305d42b3e"],

Cell[CellGroupData[{

Cell["\<\
Q.Find the two largest maximums of an interpolating function of a specific \
shape (fast)\
\>", "Subtitle",
 CellChangeTimes->{{3.806575890936391*^9, 
  3.8065759171057653`*^9}},ExpressionUUID->"29c4d12e-66ca-4c54-b3ba-\
3933c20bf503"],

Cell[TextData[StyleBox["I have an oscillating interpolating function f[x] and \
I would like to find the x values of the two largest maximums (or even \
better: their distance).\nOne example of such an interpolating function is \
generated by this code:\nv0 = 2 10^-5;\nh = 1/50; \na = -10; \nb = 10; \n\
plist = Range[N@a, b, h]; \n\[Psi]pi = E^(-(p^2/4)) (2/\[Pi])^(1/4) /. p -> \
plist;\nham = With[{c = N[I v0/(8 h^3)]}, \n   SparseArray[{Band[{1, 1}] -> \
1./4 plist^2 + 0. I, \n     Band[{1, 4}] -> c, Band[{1, 3}] -> -8 c, Band[{1, \
2}] -> +13 c, \n     Band[{2, 1}] -> -13 c, Band[{3, 1}] -> +8 c, \n     \
Band[{4, 1}] -> -c}, {1, 1} Length[plist], 0. + 0. I]];\n\[Psi]p[t_, \
\[Psi]p0_] := \[Psi]p[t, \[Psi]p0] = \n   MatrixExp[ham/I (2. Pi t), \
\[Psi]p0]; \nf[t_] := f[t] = \n  Interpolation[Transpose[{plist, \
Abs[\[Psi]p[t, \[Psi]pi]]^2}]]\nPlot[f[10][x], {x, -5, 5}, PlotRange -> All, \
PlotStyle -> Blue]", "Abstract"]], "CodeText",
 CellChangeTimes->{{3.8065745147553463`*^9, 3.8065745147594895`*^9}, {
   3.8065745681522474`*^9, 3.8065745864136486`*^9}, {3.8065746775171695`*^9, 
   3.806574712924746*^9}, {3.806575928417385*^9, 3.806575933359335*^9}, 
   3.8065760831378317`*^9},ExpressionUUID->"f72682be-7f09-4664-a696-\
54961b3fcf95"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.806574821567983*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"c8dd1192-4b4e-4a74-81da-ff7bfcd26e78"],

Cell[CellGroupData[{

Cell["Answer :", "Section",
 CellChangeTimes->{{3.806574717918437*^9, 
  3.80657476750863*^9}},ExpressionUUID->"f022ac71-bbcf-42f0-a437-\
cf41fd558d24"],

Cell[CellGroupData[{

Cell["\<\
As far as I understand you want to find x - coordinates of the two maximum \
peak values.I guess using FindPeaks can be useful in this case :\
\>", "Subsection",
 CellChangeTimes->{{3.806574765094016*^9, 3.8065747650965853`*^9}, {
  3.8065748105990615`*^9, 3.8065748109412413`*^9}, {3.8065759509666305`*^9, 
  3.8065759926165214`*^9}},ExpressionUUID->"546baf6a-63b5-4f2d-ba3e-\
d04187d05d21"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"v0", "=", 
   RowBox[{"2", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "5"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"1", "/", "50"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"-", "10"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"b", "=", "10"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"plist", "=", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"N", "@", "a"}], ",", "b", ",", "h"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Psi]pi", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"E", "^", 
      RowBox[{"(", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p", "^", "2"}], "/", "4"}], ")"}]}], ")"}]}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "/", "\[Pi]"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "4"}], ")"}]}]}], "/.", 
    RowBox[{"p", "\[Rule]", "plist"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ham", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", "=", 
       RowBox[{"N", "[", 
        RowBox[{"I", " ", 
         RowBox[{"v0", "/", 
          RowBox[{"(", 
           RowBox[{"8", " ", 
            RowBox[{"h", "^", "3"}]}], ")"}]}]}], "]"}]}], "}"}], ",", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Band", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
          RowBox[{
           RowBox[{
            RowBox[{"1.", "/", "4"}], " ", 
            RowBox[{"plist", "^", "2"}]}], "+", 
           RowBox[{"0.", " ", "I"}]}]}], ",", 
         RowBox[{
          RowBox[{"Band", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "4"}], "}"}], "]"}], "\[Rule]", "c"}], ",", 
         RowBox[{
          RowBox[{"Band", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "\[Rule]", 
          RowBox[{
           RowBox[{"-", "8"}], " ", "c"}]}], ",", 
         RowBox[{
          RowBox[{"Band", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", 
          RowBox[{
           RowBox[{"+", "13"}], " ", "c"}]}], ",", 
         RowBox[{
          RowBox[{"Band", "[", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", 
          RowBox[{
           RowBox[{"-", "13"}], " ", "c"}]}], ",", 
         RowBox[{
          RowBox[{"Band", "[", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], "]"}], "\[Rule]", 
          RowBox[{
           RowBox[{"+", "8"}], " ", "c"}]}], ",", 
         RowBox[{
          RowBox[{"Band", "[", 
           RowBox[{"{", 
            RowBox[{"4", ",", "1"}], "}"}], "]"}], "\[Rule]", 
          RowBox[{"-", "c"}]}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], " ", 
        RowBox[{"Length", "[", "plist", "]"}]}], ",", 
       RowBox[{"0.", "+", 
        RowBox[{"0.", " ", "I"}]}]}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]p", "[", 
    RowBox[{"t_", ",", "\[Psi]p0_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[Psi]p", "[", 
     RowBox[{"t", ",", "\[Psi]p0"}], "]"}], "=", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ham", "/", "I"}], " ", 
       RowBox[{"(", 
        RowBox[{"2.", " ", "Pi", " ", "t"}], ")"}]}], ",", "\[Psi]p0"}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"f", "[", "t", "]"}], "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"plist", ",", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"\[Psi]p", "[", 
          RowBox[{"t", ",", "\[Psi]pi"}], "]"}], "]"}], "^", "2"}]}], "}"}], 
     "]"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.8065760497018285`*^9, 
  3.806576066614682*^9}},ExpressionUUID->"a4c6b948-986e-42e0-bc13-\
180e9213c468"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"f", "[", "10", "]"}], "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "5", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Fp", "=", 
   RowBox[{"FindPeaks", "[", 
    RowBox[{"d", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"d", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], ",", "Fp"}], "]"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.806574765094016*^9, 3.8065747650965853`*^9}, {
   3.8065748105990615`*^9, 3.8065748109412413`*^9}, {3.8065759509666305`*^9, 
   3.8065759674450545`*^9}, 3.8065759999954615`*^9, 3.8065760741039934`*^9},
 CellLabel->"In[79]:=",ExpressionUUID->"15cb328a-1687-4eab-89f4-26c1a6264196"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now, just sort it", "Subsection",
 CellChangeTimes->{{3.806574765094016*^9, 3.8065747650965853`*^9}, {
  3.8065748105990615`*^9, 3.8065748109412413`*^9}, {3.8065759509666305`*^9, 
  3.8065759674450545`*^9}, {3.8065759999954615`*^9, 
  3.8065760099592934`*^9}},ExpressionUUID->"0148730d-9868-4765-aa76-\
0ef891727749"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sorted", "=", 
    RowBox[{"Sort", "[", 
     RowBox[{"data1", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Last", "[", "#2", "]"}], "<", 
        RowBox[{"Last", "[", "#1", "]"}]}], "&"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cords", "=", 
   RowBox[{"sorted", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tex", "=", "cords"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"offset", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "+", 
       RowBox[{"{", 
        RowBox[{"1.9", ",", "0"}], "}"}]}], "&"}], ",", "cords"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"d", ",", 
   RowBox[{"Joined", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Blue", "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"tex", ",", "offset"}], "]"}], "]"}], ",", "Red", ",", 
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
      RowBox[{"Point", "[", "cords", "]"}]}], "}"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.806574765094016*^9, 3.8065747650965853`*^9}, {
  3.8065748105990615`*^9, 3.8065748109412413`*^9}, {3.8065759509666305`*^9, 
  3.8065759674450545`*^9}, {3.8065759999954615`*^9, 3.806576003498898*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"6906ab41-dbdd-4b66-b261-09415aac89c3"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[
      1.6], 
      StyleBox[LineBox[CompressedData["
1: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
        "]],
       FontSize->14]}}, 
    {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[
     1.6], 
     StyleBox[{},
      FontSize->14]}, {
     {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[
      1.6], 
      StyleBox[{},
       FontSize->14]}, {}}, {
     {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[
      1.6], 
      StyleBox[{},
       FontSize->14]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Epilog->{{
     InsetBox[
      FormBox[
       RowBox[{"{", 
         RowBox[{"0.1200000000000001`", ",", "3.9618280187899395`"}], "}"}], 
       TraditionalForm], {2.02, 3.9618280187899395`}], 
     InsetBox[
      FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.13999999999999968`"}], ",", 
           "2.0210153264583743`"}], "}"}], TraditionalForm], {
      1.7600000000000002`, 2.0210153264583743`}]}, 
    RGBColor[1, 0, 0], 
    PointSize[0.02], 
    PointBox[{{0.1200000000000001, 
     3.9618280187899395`}, {-0.13999999999999968`, 2.0210153264583743`}}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-5., 5.}, {0, 3.9618280187899395`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8065747713257055`*^9, {3.8065748076194386`*^9, 3.8065748252085514`*^9}, 
   3.806576022134098*^9, 3.8065760551951838`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"8512a4ab-0ec0-4222-a3c3-3e2215562e86"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{759, 848},
WindowMargins->{{278, Automatic}, {-6, Automatic}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"703a4a0f-e089-4fad-98e4-30e944199954"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 155, 2, 28, "Input",ExpressionUUID->"f16d3080-3b0a-48d1-824a-f00305d42b3e"],
Cell[CellGroupData[{
Cell[738, 26, 245, 6, 85, "Subtitle",ExpressionUUID->"29c4d12e-66ca-4c54-b3ba-3933c20bf503"],
Cell[986, 34, 1257, 17, 433, "CodeText",ExpressionUUID->"f72682be-7f09-4664-a696-54961b3fcf95"],
Cell[2246, 53, 147, 2, 28, "Input",ExpressionUUID->"c8dd1192-4b4e-4a74-81da-ff7bfcd26e78"],
Cell[CellGroupData[{
Cell[2418, 59, 152, 3, 67, "Section",ExpressionUUID->"f022ac71-bbcf-42f0-a437-cf41fd558d24"],
Cell[CellGroupData[{
Cell[2595, 66, 402, 7, 79, "Subsection",ExpressionUUID->"546baf6a-63b5-4f2d-ba3e-d04187d05d21"],
Cell[3000, 75, 4016, 128, 238, "Input",ExpressionUUID->"a4c6b948-986e-42e0-bc13-180e9213c468"],
Cell[7019, 205, 1313, 39, 67, "Input",ExpressionUUID->"15cb328a-1687-4eab-89f4-26c1a6264196"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8369, 249, 323, 5, 53, "Subsection",ExpressionUUID->"0148730d-9868-4765-aa76-0ef891727749"],
Cell[CellGroupData[{
Cell[8717, 258, 1742, 49, 162, "Input",ExpressionUUID->"6906ab41-dbdd-4b66-b261-09415aac89c3"],
Cell[10462, 309, 17135, 311, 254, "Output",ExpressionUUID->"8512a4ab-0ec0-4222-a3c3-3e2215562e86"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

